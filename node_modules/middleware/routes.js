/**
 * Created by mark on 11/12/2015.
 */

module.exports = function (app, fs, redisClient) {
    app.get('/getUser', function(req, res) {
        redisClient.get("current_user", function(err, reply) {
            if(err || !reply || reply == null) {
                reply = {
                    error : true,
                    msg : 'Authentication failed.'
                }
            }
            res.send(JSON.parse(reply)).end();
        });
    });
    app.post('/logIn', function (req, res) {
        try {
            var query = serverUsers.find({login: req.body.login, password: req.body.password})
                .exec(function (err, docs) {
                    if (!err) {
                        if(docs.length > 0) {
                            docs[0] = docs[0].toJSON();
                            var userData = {
                                user_name : docs[0].user_name,
                                user_level : docs[0].user_level,
                            }
                            redisClient.set("current_user", JSON.stringify(userData), function(err, reply) {
                                res.send(userData).end();
                            });
                        }
                        else {
                            res.send({
                                "error" : true,
                                "msg" : "login or password doesn't match"
                            });
                        }
                    }
                    else {
                        console.log('error');
                    }
                })
        }
        catch (err) {
            console.log(err);
        }
    });
    app.post('/logOut',function (req, res) {
        redisClient.set("current_user", JSON.stringify({}), function(err, reply) {
            reply = {
                error : true,
                msg : 'Authentication failed.'
            }
            res.send(reply).end();
        });
    });
    app.post('/getServers', function (req, res) {
        try {
            var query = serverServers.find(req.body)
                .exec(function (err, docs) {
                    if (!err) {
                        if(docs.length > 0) {
                            console.log("servers : ", docs);
                            res.send({
                                "error" : false,
                                "servers" : docs
                            });
                        }
                        else {
                            res.send({
                                "error" : true,
                                "msg" : "There is no avalailable server."
                            });
                        }
                    }
                    else {
                        console.log('error');
                    }
                })
        }
        catch (err) {
            console.log(err);
        }
    });
    app.post('/getSeasons', function (req, res) {
        try {
            var query = serverSeasons.find(req.body)
                .exec(function (err, docs) {
                    if (!err) {
                        if(docs.length > 0) {
                            console.log("seasons : ", docs);
                            res.send({
                                "error" : false,
                                "seasons" : docs
                            });
                        }
                        else {
                            res.send({
                                "error" : true,
                                "msg" : "There is no avalailable season."
                            });
                        }
                    }
                    else {
                        console.log('error');
                    }
                })
        }
        catch (err) {
            console.log(err);
        }
    });
    app.post('/getUserCharacters', function (req, res) {
        try {
            var query = userCharacters.find(req.body)
                .exec(function (err, docs) {
                    if (!err) {
                        if(docs.length > 0) {
                            console.log("user characters : ", docs);
                            res.send({
                                "error" : false,
                                "characters" : docs
                            });
                        }
                        else {
                            res.send({
                                "error" : true,
                                "msg" : "There is no avalailable character."
                            });
                        }
                    }
                    else {
                        console.log('error');
                    }
                })
        }
        catch (err) {
            console.log(err);
        }
    });
    app.post('/getNpcCharacters', function (req, res) {
        try {
            var query = npcCharacters.find(req.body)
                .exec(function (err, docs) {
                    if (!err) {
                        if(docs.length > 0) {
                            console.log("npc characters : ", docs);
                            res.send({
                                "error" : false,
                                "npcs" : docs
                            });
                        }
                        else {
                            res.send({
                                "error" : true,
                                "msg" : "There is no avalailable character."
                            });
                        }
                    }
                    else {
                        console.log('error');
                    }
                })
        }
        catch (err) {
            console.log(err);
        }
    });
    app.get('/', function (req, res) {
        fs.readFile('./data/index.html', function (err, html) {
            if (err) {
                throw err;
            }
            else {
                res.writeHeader(200, {"Content-Type": "text/html"});
                res.write(html);
                res.end();
            }
        });
    });

};
